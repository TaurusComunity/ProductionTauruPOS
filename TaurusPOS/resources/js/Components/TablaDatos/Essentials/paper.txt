<script setup>
import { computed } from 'vue';

const props = defineProps({
  productos: {
    type: Array,
    default: () => []
  },
  searchQuery: {
    type: String,
    default: ''
  }
});

const filteredProductos = computed(() => {
  if (!props.productos || !Array.isArray(props.productos)) return [];
  if (!props.searchQuery.trim()) return props.productos;
  return props.productos.filter(producto =>
    producto.nombre.toLowerCase().includes(props.searchQuery.toLowerCase())
  );
});

function getStockClass(stock) {
  if (stock <= 9) return 'bg-semaforo-rojo';
  if (stock >= 10 && stock <= 14) return 'bg-semaforo-amarillo';
  if (stock >= 15) return 'bg-semaforo-verde';
}

function getEstadoClass(estado) {
  if (estado === 'Inactivo') return 'bg-semaforo-rojo';
  if (estado === 'Suspendido') return 'bg-semaforo-amarillo';
  if (estado === 'Activo') return 'bg-semaforo-verde';
}
</script>

<template>
  <div class="overflow-x-auto">
    <table class="w-full border-collapse">
      <thead>
        <tr class="border border-secundary-light">
          <th class="p-2 text-left">PLU</th>
          <th class="p-2 text-left">Imagen</th>
          <th class="p-2 text-left">Nombre</th>
          <th class="p-2 text-left">Descripción</th>
          <th class="p-2 text-left">Categoría</th>
          <th class="p-2 text-left">Receta</th>
          <th class="p-2 text-left">Stock</th>
          <th class="p-2 text-left">Estado</th>
          <th class="p-2 text-left">Precio final</th>
          <th class="p-2 text-left">Acciones</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="producto in filteredProductos" :key="producto.id">
          <td class="text-[14px] p-2">{{ producto.id }}</td>
          <td class="text-[14px] p-2">
            <img :src="producto.imagen" class="rounded-lg" width="45" height="40" alt="Imagen de producto" />
          </td>
          <td class="text-[14px] p-2">{{ producto.nombre }}</td>
          <td class="text-[14px] p-2">{{ producto.descripcion }}</td>
          <td class="text-[14px] p-2">{{ producto.categoria }}</td>
          <td class="text-[14px] p-2">{{ producto.receta }}</td>
          <td class="text-[14px] p-2">
            <span class="p-2 rounded-lg font-bold" :class="getStockClass(producto.stock)">
              {{ producto.stock }} unidades
            </span>
          </td>
          <td class="text-[14px] p-2">
            <span class="p-2 rounded-lg font-bold" :class="getEstadoClass(producto.estado)">
              {{ producto.estado }}
            </span>
          </td>
          <td class="text-[14px] p-2">
            ${{ producto.precio_final.toFixed(0) }}
          </td>
          <td>
            <div class="flex gap-2 items-center">
              <span class="material-symbols-rounded hover:text-essentials-primary cursor-pointer">
                delete
              </span>
              <span class="material-symbols-rounded hover:text-blue-400 cursor-pointer">
                eye_tracking
              </span>
            </div>
          </td>
        </tr>
      </tbody>
    </table>

    <div v-if="filteredProductos.length === 0" class="text-center mt-10 font-bold text-2xl text-gray-500">
      No hay coincidencias.
    </div>
  </div>
</template>

<style scoped>
.bg-semaforo-rojo {
  background-color: #ff4d4f;
  color: white;
}

.bg-semaforo-amarillo {
  background-color: #ffec3d;
  color: #000;
}

.bg-semaforo-verde {
  background-color: #52c41a;
  color: white;
}
</style>
